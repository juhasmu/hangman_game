{"ast":null,"code":"var _jsxFileName = \"C:\\\\js\\\\hangman\\\\src\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport ShowDrawing from \"./ShowDrawing\";\nimport Button from \"./Button\";\nimport ShowWord from \"./ShowWord\";\nimport { useState } from 'react';\nimport Keyboard from \"./Keyboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  function countIncrement() {\n    if (count >= 10) setC(1);else setC(count + 1);\n  }\n\n  function checkGuess(toGuessChars, guessedChars) {}\n\n  let toGuessChars = ['s', 'a', 'r', 'v', 'i', 'k', 'u', 'o', 'n', 'o'];\n  let [guessedChars, setGuessedChars] = useState([]);\n  let count = 1;\n  let flag = true;\n  flag = checkGuess(toGuessChars, guessedChars);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ShowDrawing, {\n      drawingIndex: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ShowWord, {\n      toGuessChars: toGuessChars,\n      guessedChars: guessedChars\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Keyboard, {\n      guessedChars: guessedChars,\n      setGuessedChars: setGuessedChars\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"I1hOqOr+dHIQz7jxkC/zG5Ed/D4=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/js/hangman/src/Main.js"],"names":["ShowDrawing","Button","ShowWord","useState","Keyboard","Main","countIncrement","count","setC","checkGuess","toGuessChars","guessedChars","setGuessedChars","flag"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,WAASC,cAAT,GAAyB;AACrB,QAAIC,KAAK,IAAI,EAAb,EAAgBC,IAAI,CAAC,CAAD,CAAJ,CAAhB,KACKA,IAAI,CAACD,KAAK,GAAC,CAAP,CAAJ;AACN;;AACH,WAASE,UAAT,CAAoBC,YAApB,EAAiCC,YAAjC,EAA8C,CAE7C;;AACD,MAAID,YAAY,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,EAAiC,GAAjC,EAAqC,GAArC,CAAnB;AACA,MAAI,CAACC,YAAD,EAAcC,eAAd,IAA+BT,QAAQ,CAAC,EAAD,CAA3C;AACA,MAAII,KAAK,GAAG,CAAZ;AACA,MAAIM,IAAI,GAAG,IAAX;AACAA,EAAAA,IAAI,GAAGJ,UAAU,CAACC,YAAD,EAAcC,YAAd,CAAjB;AACA,sBACI;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,YAAY,EAAEJ;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,YAAY,EAAEG,YAAxB;AAAsC,MAAA,YAAY,EAAEC;AAApD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,QAAD;AAAU,MAAA,YAAY,EAAEA,YAAxB;AAAsC,MAAA,eAAe,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAOH,CApBD;;GAAMP,I;;KAAAA,I;AAsBN,eAAeA,IAAf","sourcesContent":["import ShowDrawing from \"./ShowDrawing\";\r\nimport Button from \"./Button\";\r\nimport ShowWord from \"./ShowWord\";\r\nimport { useState } from 'react'\r\nimport Keyboard from \"./Keyboard\";\r\n\r\nconst Main = () => {\r\n    function countIncrement(){\r\n        if (count >= 10)setC(1);\r\n        else setC(count+1);\r\n      }\r\n    function checkGuess(toGuessChars,guessedChars){\r\n\r\n    }\r\n    let toGuessChars = ['s','a','r','v','i','k','u','o','n','o']\r\n    let [guessedChars,setGuessedChars]=useState([]);\r\n    let count = 1;\r\n    let flag = true;\r\n    flag = checkGuess(toGuessChars,guessedChars);\r\n    return (\r\n        <>\r\n            <ShowDrawing drawingIndex={count} />\r\n            <ShowWord toGuessChars={toGuessChars} guessedChars={guessedChars} />\r\n            <Keyboard guessedChars={guessedChars} setGuessedChars={setGuessedChars}/>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}